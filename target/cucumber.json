[{"line":2,"elements":[{"start_timestamp":"2024-12-23T06:15:29.966Z","before":[{"result":{"duration":462621100,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}}],"line":12,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1998100,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1636791000,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [201] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 201(file:///D:/IT%20Quality%20Assuarance/Assignment/ITQA-API-Testing/src/test/resources/features/create_books.feature:9)\r\n","duration":49894500,"status":"failed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-23T06:15:29.962Z","before":[{"result":{"duration":461614700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}}],"line":13,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2998800,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1636288100,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby2","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [201] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 201(file:///D:/IT%20Quality%20Assuarance/Assignment/ITQA-API-Testing/src/test/resources/features/create_books.feature:9)\r\n","duration":48895100,"status":"failed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-23T06:15:29.965Z","before":[{"result":{"duration":463762000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}}],"line":14,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1998100,"status":"passed"},"line":5,"name":"I am logged in as \"user\" with password \"password\" to post as \"user\"","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":61}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1636288100,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["1984    12","George Orwell"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [201] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 201(file:///D:/IT%20Quality%20Assuarance/Assignment/ITQA-API-Testing/src/test/resources/features/create_books.feature:9)\r\n","duration":50894900,"status":"failed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-23T06:15:29.966Z","before":[{"result":{"duration":463253700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}}],"line":15,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2998800,"status":"passed"},"line":5,"name":"I am logged in as \"guest\" with password \"password\" to post as \"unauthorized\"","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"unauthorized\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1637294800,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Moby Dick","Herman Melville"]}],"keyword":"When "},{"result":{"duration":33494900,"status":"passed"},"line":9,"name":"the response status code should be 401","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]}],"name":"Book Creation Scenarios","description":"","id":"book-creation-scenarios","keyword":"Feature","uri":"file:src/test/resources/features/create_books.feature","tags":[{"name":"@CreateBook","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-12-23T06:15:29.964Z","before":[{"result":{"duration":464267300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}}],"line":4,"name":"Delete a book by ID as admin","description":"","id":"delete-a-book;delete-a-book-by-id-as-admin","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2998800,"status":"passed"},"line":5,"name":"I am logged in to delete as admin user name \"admin\" password \"password\"","match":{"arguments":[{"val":"\"admin\"","offset":44},{"val":"\"password\"","offset":61}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_admin(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1641968300,"status":"passed"},"line":6,"name":"I send a DELETE request to \"/api/books/1\"","match":{"arguments":[{"val":"\"/api/books/1\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<200> but was:<403>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:63)\r\n\tat ✽.the response delete status code should be 200(file:///D:/IT%20Quality%20Assuarance/Assignment/ITQA-API-Testing/src/test/resources/features/delete_books.feature:7)\r\n","duration":8055800,"status":"failed"},"line":7,"name":"the response delete status code should be 200","match":{"arguments":[{"val":"200","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"duration":999500,"status":"skipped"},"line":8,"name":"the delete response body should contain \"Book deleted successfully\"","match":{"arguments":[{"val":"\"Book deleted successfully\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2024-12-23T06:15:29.963Z","before":[{"result":{"duration":463762000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}}],"line":10,"name":"Delete a book by ID as user","description":"","id":"delete-a-book;delete-a-book-by-id-as-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1998800,"status":"passed"},"line":11,"name":"I am logged in to delete as user name \"user\" password \"password\"","match":{"arguments":[{"val":"\"user\"","offset":38},{"val":"\"password\"","offset":54}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_user(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1641968300,"status":"passed"},"line":12,"name":"I send a DELETE request to \"/api/books/1\"","match":{"arguments":[{"val":"\"/api/books/1\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<401> but was:<200>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:63)\r\n\tat ✽.the response delete status code should be 401(file:///D:/IT%20Quality%20Assuarance/Assignment/ITQA-API-Testing/src/test/resources/features/delete_books.feature:13)\r\n","duration":8055800,"status":"failed"},"line":13,"name":"the response delete status code should be 401","match":{"arguments":[{"val":"401","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":14,"name":"the delete response body should contain \"Unauthorized access\"","match":{"arguments":[{"val":"\"Unauthorized access\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]}],"name":"Delete a book","description":"","id":"delete-a-book","keyword":"Feature","uri":"file:src/test/resources/features/delete_books.feature","tags":[{"name":"@DeleteBooks","type":"Tag","location":{"line":1,"column":1}}]}]