[{"line":2,"elements":[{"start_timestamp":"2024-12-25T14:10:56.441Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":2000600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":999700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1002100,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1001200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000100,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1844269500,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"duration":999300,"status":"passed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-25T14:10:56.443Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":999400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":996800,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000100,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1846267500,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby2","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"status":"passed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-25T14:10:56.442Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2998100,"status":"passed"},"line":5,"name":"I am logged in as \"user\" with password \"password\" to post as \"user\"","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":61}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1843265700,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["1984    12","George Orwell"]}],"keyword":"When "},{"result":{"duration":21000300,"status":"passed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-25T14:10:56.444Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":2001500,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":15,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1996900,"status":"passed"},"line":5,"name":"I am logged in as \"guest\" with password \"password\" to post as \"unauthorized\"","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"unauthorized\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1465709000,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Moby Dick","Herman Melville"]}],"keyword":"When "},{"result":{"duration":4000100,"status":"passed"},"line":9,"name":"the response status code should be 401","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-25T14:10:56.441Z","before":[{"result":{"duration":296998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1001200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Create Book with Missing Title","description":"","id":"book-creation-scenarios;create-book-with-missing-title","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000100,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1842267500,"status":"passed"},"line":18,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","Missing Title"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: {\"id\":5,\"title\":null,\"author\":\"Missing Title\"} expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 400(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:21)\r\n","duration":24000600,"status":"failed"},"line":21,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2024-12-25T14:10:56.442Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":4001400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":999400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":22,"name":"Create Book with Missing Author","description":"","id":"book-creation-scenarios;create-book-with-missing-author","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1996900,"status":"passed"},"line":23,"name":"I am logged in as \"admin\" with password \"password\" to post as admin","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1843265700,"status":"passed"},"line":24,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Missing Author",""]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: {\"id\":4,\"title\":\"Missing Author\",\"author\":null} expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 400(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:27)\r\n","duration":22002000,"status":"failed"},"line":27,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]}],"name":"Book Creation Scenarios","description":"","id":"book-creation-scenarios","keyword":"Feature","uri":"file:src/test/resources/features/1create_books.feature","tags":[{"name":"@CreateBook","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-12-25T14:10:56.444Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":3001700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Get the list of books with different admin credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-credentials-get;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1998000,"status":"passed"},"line":6,"name":"I am an admin user with username \"admin\" and password \"password\" Get","match":{"arguments":[{"val":"\"admin\"","offset":33},{"val":"\"password\"","offset":54}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1760234500,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":5996700,"status":"passed"},"line":8,"name":"the response status code should be 200 Get","match":{"arguments":[{"val":"200","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":502035400,"status":"passed"},"line":9,"name":"the response should contain a list of books Get","match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateBooksListGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]},{"start_timestamp":"2024-12-25T14:10:56.442Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1002100,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1001200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Get the list of books with different admin credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-credentials-get;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000100,"status":"passed"},"line":6,"name":"I am an admin user with username \"admin2\" and password \"password2\" Get","match":{"arguments":[{"val":"\"admin2\"","offset":33},{"val":"\"password2\"","offset":55}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1466710600,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":4000100,"status":"passed"},"line":8,"name":"the response status code should be 401 Get","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":1000500,"status":"passed"},"line":9,"name":"the response should be empty or invalid Get","match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateEmptyResponseGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]},{"start_timestamp":"2024-12-25T14:10:56.445Z","before":[{"result":{"duration":296998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1001000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":3001700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":15,"name":"Get the list of books with different admin credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-credentials-get;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1998000,"status":"passed"},"line":6,"name":"I am an admin user with username \"admin3\" and password \"password3\" Get","match":{"arguments":[{"val":"\"admin3\"","offset":33},{"val":"\"password3\"","offset":55}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1466710600,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":4000100,"status":"passed"},"line":8,"name":"the response status code should be 401 Get","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":1000500,"status":"passed"},"line":9,"name":"the response should be empty or invalid Get","match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateEmptyResponseGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]},{"start_timestamp":"2024-12-25T14:10:56.443Z","before":[{"result":{"duration":297997200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":999400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Get the list of books with different admin credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-credentials-get;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":996800,"status":"passed"},"line":6,"name":"I am an admin user with username \"user\" and password \"password\" Get","match":{"arguments":[{"val":"\"user\"","offset":33},{"val":"\"password\"","offset":53}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1761230100,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 200 Get","match":{"arguments":[{"val":"200","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":505032200,"status":"passed"},"line":9,"name":"the response should contain a list of books Get","match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.validateBooksListGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]}],"name":"Retrieve Books","description":"  As an admin user, I want to retrieve a list of books so that I can manage them.","id":"retrieve-books","keyword":"Feature","uri":"file:src/test/resources/features/2get_all_books.feature","tags":[{"name":"@GetAllBooks","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-12-25T14:10:58.255Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":998500,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Get the details of a book by its ID with different credentials get","description":"","id":"retrieve-book-by-id;get-the-details-of-a-book-by-its-id-with-different-credentials-get;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":4000900,"status":"passed"},"line":6,"name":"I am an user with username \"admin\" and password \"password\" to log get book get","match":{"arguments":[{"val":"\"admin\"","offset":27},{"val":"\"password\"","offset":48}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_am_an_user_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":225518900,"status":"passed"},"line":7,"name":"I send a GET request for book ID 1 get","match":{"arguments":[{"val":"1","offset":33}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_send_a_get_request_for_book_id(java.lang.Integer)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected response status code expected [200] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.get.getBookById.the_response_status_code_should_be(getBookById.java:35)\r\n\tat ✽.the response status code should be 200 get(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/3get_books_by_id.feature:8)\r\n","duration":1000300,"status":"failed"},"line":8,"name":"the response status code should be 200 get","match":{"arguments":[{"val":"200","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":9,"name":"the response should contain book details get","match":{"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_should_contain_book_details()"},"keyword":"And "}],"tags":[{"name":"@GetBookByID"}]},{"start_timestamp":"2024-12-25T14:10:58.254Z","before":[{"result":{"duration":1999200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":5001400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Get the details of a book by its ID with different credentials get","description":"","id":"retrieve-book-by-id;get-the-details-of-a-book-by-its-id-with-different-credentials-get;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":6,"name":"I am an user with username \"user\" and password \"password\" to log get book get","match":{"arguments":[{"val":"\"user\"","offset":27},{"val":"\"password\"","offset":47}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_am_an_user_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":185517200,"status":"passed"},"line":7,"name":"I send a GET request for book ID 1 get","match":{"arguments":[{"val":"1","offset":33}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_send_a_get_request_for_book_id(java.lang.Integer)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected response status code expected [200] but found [403]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.get.getBookById.the_response_status_code_should_be(getBookById.java:35)\r\n\tat ✽.the response status code should be 200 get(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/3get_books_by_id.feature:8)\r\n","duration":5999500,"status":"failed"},"line":8,"name":"the response status code should be 200 get","match":{"arguments":[{"val":"200","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":9,"name":"the response should contain book details get","match":{"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_should_contain_book_details()"},"keyword":"And "}],"tags":[{"name":"@GetBookByID"}]},{"start_timestamp":"2024-12-25T14:10:58.255Z","before":[{"result":{"duration":1000600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":2000300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":15,"name":"Get the details of a book by its ID with different credentials get","description":"","id":"retrieve-book-by-id;get-the-details-of-a-book-by-its-id-with-different-credentials-get;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":6,"name":"I am an user with username \"admin\" and password \"password\" to log get book get","match":{"arguments":[{"val":"\"admin\"","offset":27},{"val":"\"password\"","offset":48}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_am_an_user_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":219516100,"status":"passed"},"line":7,"name":"I send a GET request for book ID 100 get","match":{"arguments":[{"val":"100","offset":33}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_send_a_get_request_for_book_id(java.lang.Integer)"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 404 get","match":{"arguments":[{"val":"404","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":22003200,"status":"passed"},"line":9,"name":"the response should indicate book not found get","match":{"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_should_indicate_book_not_found()"},"keyword":"And "}],"tags":[{"name":"@GetBookByID"}]},{"start_timestamp":"2024-12-25T14:10:58.471Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Get the details of a book by its ID with different credentials get","description":"","id":"retrieve-book-by-id;get-the-details-of-a-book-by-its-id-with-different-credentials-get;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999700,"status":"passed"},"line":6,"name":"I am an user with username \"admin2\" and password \"password2\" to log get book get","match":{"arguments":[{"val":"\"admin2\"","offset":27},{"val":"\"password2\"","offset":49}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_am_an_user_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":220035900,"status":"passed"},"line":7,"name":"I send a GET request for book ID 99 get","match":{"arguments":[{"val":"99","offset":33}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.i_send_a_get_request_for_book_id(java.lang.Integer)"},"keyword":"When "},{"result":{"duration":1000300,"status":"passed"},"line":8,"name":"the response status code should be 401 get","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_status_code_should_be(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":1002500,"status":"passed"},"line":9,"name":"the response should not authorized get","match":{"location":"com.APIAutomation.stepdefinitions.get.getBookById.the_response_should_not_authorized_get()"},"keyword":"And "}],"tags":[{"name":"@GetBookByID"}]}],"name":"Retrieve Book by ID","description":"  As an user, I want to retrieve a book by its ID so that I can view or manage it.","id":"retrieve-book-by-id","keyword":"Feature","uri":"file:src/test/resources/features/3get_books_by_id.feature","tags":[{"name":"@GetBookByID","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-12-25T14:10:58.505Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999500,"status":"passed"},"line":4,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":441031800,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/1\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Brave New World 12345","Aldous Huxley 15"]}],"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 200 for put Member1","match":{"arguments":[{"val":"200","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2024-12-25T14:10:58.522Z","before":[{"result":{"duration":1003500,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1001700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"user\" with password \"password\" to update as \"user\" Member1","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":63}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":251029500,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/1\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    12s4","Paulo Coelho    15"]}],"keyword":"When "},{"result":{"duration":999100,"status":"passed"},"line":8,"name":"the response status code should be 403 for put Member1","match":{"arguments":[{"val":"403","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2024-12-25T14:10:58.646Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1001400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000800,"status":"passed"},"line":4,"name":"I am logged in as \"guest\" with password \"password\" to update as \"guest\" Member1","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"guest\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":25000300,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/1\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    12s3","Paulo Coelho    15"]}],"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 401 for put Member1","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2024-12-25T14:10:58.680Z","before":[{"result":{"duration":1000000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":25,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-validation-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999600,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":304002700,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/1\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","Aldous Huxley 5asda"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [400] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(BookUpdateM1StepDefinitions.java:81)\r\n\tat ✽.the response status code should be 400 for put Member1(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/4updateM1.feature:21)\r\n","duration":1997100,"status":"failed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2024-12-25T14:10:58.649Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":999000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":26,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-validation-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":202003000,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/1\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["test book",""]}],"keyword":"When "},{"result":{"status":"passed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]}],"name":"Book Update Scenarios by Member1","description":"","id":"book-update-scenarios-by-member1","keyword":"Feature","uri":"file:src/test/resources/features/4updateM1.feature","tags":[{"name":"@UpdateBookMember1","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-12-25T14:10:58.671Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Book Update by Different validation Types Member2","description":"","id":"book-update-scenarios-by-member2;book-update-by-different-validation-types-member2;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"user\" with password \"password\" to update as \"user\" Member2","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":63}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":210998900,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/1\" with the following data Member2:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    s2",""]}],"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 403 for put Member2","match":{"arguments":[{"val":"403","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2024-12-25T14:10:58.697Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Book Update by Different validation Types Member2","description":"","id":"book-update-scenarios-by-member2;book-update-by-different-validation-types-member2;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"guest\" with password \"password\" to update as \"guest\" Member2","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"guest\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":22997700,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/1\" with the following data Member2:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    s2",""]}],"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 401 for put Member2","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2024-12-25T14:10:58.693Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Book Update by Different validation Types Member2","description":"","id":"book-update-scenarios-by-member2;book-update-by-different-validation-types-member2;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"guest\" with password \"password\" to update as \"guest\" Member2","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"guest\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":25997000,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/1\" with the following data Member2:","match":{"arguments":[{"val":"\"/api/books/1\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","author abc"]}],"keyword":"When "},{"result":{"duration":1001900,"status":"passed"},"line":8,"name":"the response status code should be 401 for put Member2","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2024-12-25T14:10:58.712Z","before":[{"result":{"duration":998600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":25,"name":"Update Book with Validation Errors Member2","description":"","id":"book-update-scenarios-by-member2;update-book-with-validation-errors-member2;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as admin Member2","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":313000600,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member2:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","Missing Title 45"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [400] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(BookUpdateM2StepDefinition.java:77)\r\n\tat ✽.the response status code should be 400 for put Member2(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/5updateM2.feature:21)\r\n","duration":1001600,"status":"failed"},"line":21,"name":"the response status code should be 400 for put Member2","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2024-12-25T14:10:58.735Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1003300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":26,"name":"Update Book with Validation Errors Member2","description":"","id":"book-update-scenarios-by-member2;update-book-with-validation-errors-member2;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":995200,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as admin Member2","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":202998100,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member2:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Missing Author 45",""]}],"keyword":"When "},{"result":{"status":"passed"},"line":21,"name":"the response status code should be 400 for put Member2","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2024-12-25T14:10:58.731Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":27,"name":"Update Book with Validation Errors Member2","description":"","id":"book-update-scenarios-by-member2;update-book-with-validation-errors-member2;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as admin Member2","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":242998800,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member2:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["",""]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [400] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(BookUpdateM2StepDefinition.java:77)\r\n\tat ✽.the response status code should be 400 for put Member2(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/5updateM2.feature:21)\r\n","duration":1996200,"status":"failed"},"line":21,"name":"the response status code should be 400 for put Member2","match":{"arguments":[{"val":"400","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]}],"name":"Book Update Scenarios by Member2","description":"","id":"book-update-scenarios-by-member2","keyword":"Feature","uri":"file:src/test/resources/features/5updateM2.feature","tags":[{"name":"@UpdateBookMember2","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-12-25T14:10:58.791Z","before":[{"result":{"duration":1000400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":4,"name":"Delete a book by ID as admin","description":"","id":"delete-a-book;delete-a-book-by-id-as-admin","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":5,"name":"I am logged in to delete as admin user name \"admin\" password \"password\"","match":{"arguments":[{"val":"\"admin\"","offset":44},{"val":"\"password\"","offset":61}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_admin(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":216000900,"status":"passed"},"line":6,"name":"I send a DELETE request to \"/api/books/2\"","match":{"arguments":[{"val":"\"/api/books/2\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<200> but was:<403>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:63)\r\n\tat ✽.the response delete status code should be 200(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/6delete_books.feature:7)\r\n","duration":6999700,"status":"failed"},"line":7,"name":"the response delete status code should be 200","match":{"arguments":[{"val":"200","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":8,"name":"the delete response body should contain \"Book deleted successfully\"","match":{"arguments":[{"val":"\"Book deleted successfully\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2024-12-25T14:10:58.861Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":10,"name":"Delete a book by ID as user","description":"","id":"delete-a-book;delete-a-book-by-id-as-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":999200,"status":"passed"},"line":11,"name":"I am logged in to delete as user name \"user\" password \"password\"","match":{"arguments":[{"val":"\"user\"","offset":38},{"val":"\"password\"","offset":54}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_user(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":190000200,"status":"passed"},"line":12,"name":"I send a DELETE request to \"/api/books/3\"","match":{"arguments":[{"val":"\"/api/books/3\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<401> but was:<200>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:63)\r\n\tat ✽.the response delete status code should be 401(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/6delete_books.feature:13)\r\n","status":"failed"},"line":13,"name":"the response delete status code should be 401","match":{"arguments":[{"val":"401","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":14,"name":"the delete response body should contain \"Unauthorized access\"","match":{"arguments":[{"val":"\"Unauthorized access\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2024-12-25T14:10:58.891Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Delete a not existing book by ID as user","description":"","id":"delete-a-book;delete-a-not-existing-book-by-id-as-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in to delete not existing as user name \"user\" password \"password\"","match":{"arguments":[{"val":"\"user\"","offset":51},{"val":"\"password\"","offset":67}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_user_for_non_existing_book(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":211999300,"status":"passed"},"line":18,"name":"I send a DELETE request to \"/api/books/99\"","match":{"arguments":[{"val":"\"/api/books/99\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":19,"name":"the response delete status code should be 404","match":{"arguments":[{"val":"404","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"passed"},"line":20,"name":"the delete response body should contain \"Book not found\"","match":{"arguments":[{"val":"\"Book not found\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2024-12-25T14:10:58.946Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":22,"name":"Delete a not existing book by ID as admin","description":"","id":"delete-a-book;delete-a-not-existing-book-by-id-as-admin","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":23,"name":"I am logged in to delete not existing as user name \"admin\" password \"password\"","match":{"arguments":[{"val":"\"admin\"","offset":51},{"val":"\"password\"","offset":68}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_user_for_non_existing_book(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":156997800,"status":"passed"},"line":24,"name":"I send a DELETE request to \"/api/books/99\"","match":{"arguments":[{"val":"\"/api/books/99\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<404> but was:<403>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:63)\r\n\tat ✽.the response delete status code should be 404(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/6delete_books.feature:25)\r\n","duration":999100,"status":"failed"},"line":25,"name":"the response delete status code should be 404","match":{"arguments":[{"val":"404","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":26,"name":"the delete response body should contain \"Book not found\"","match":{"arguments":[{"val":"\"Book not found\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2024-12-25T14:10:58.955Z","before":[{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":28,"name":"Delete a existing book by ID as non-auth user","description":"","id":"delete-a-book;delete-a-existing-book-by-id-as-non-auth-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"I am logged in to delete not existing as user name \"no auth\" password \"no auth\"","match":{"arguments":[{"val":"\"no auth\"","offset":51},{"val":"\"no auth\"","offset":70}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.login_as_user_for_non_existing_book(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":152001200,"status":"passed"},"line":30,"name":"I send a DELETE request to \"/api/books/1\"","match":{"arguments":[{"val":"\"/api/books/1\"","offset":27}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":31,"name":"the response delete status code should be 401","match":{"arguments":[{"val":"401","offset":42}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"passed"},"line":32,"name":"the delete response body should contain \"\"","match":{"arguments":[{"val":"\"\"","offset":40}],"location":"com.APIAutomation.stepdefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]}],"name":"Delete a book","description":"","id":"delete-a-book","keyword":"Feature","uri":"file:src/test/resources/features/6delete_books.feature","tags":[{"name":"@DeleteBooks","type":"Tag","location":{"line":1,"column":1}}]}]