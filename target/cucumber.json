[{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:05:58.390Z","before":[{"result":{"duration":273995600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":998000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1000300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":12,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":3996300,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1228602000,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [201] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 201(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:9)\r\n","duration":15999300,"status":"failed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:05:58.391Z","before":[{"result":{"duration":277000200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1997500,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1000300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":13,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":3996300,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1228602000,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby2","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [201] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 201(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:9)\r\n","duration":15999300,"status":"failed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:05:58.392Z","before":[{"result":{"duration":273995600,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":2000400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":3001700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":7999500,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":14,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":5,"name":"I am logged in as \"user\" with password \"password\" to post as \"user\"","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":61}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1217596600,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["1984    12","George Orwell"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [201] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 201(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:9)\r\n","duration":13997200,"status":"failed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:05:58.391Z","before":[{"result":{"duration":277000200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":4999700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":4997400,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":15,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1004000,"status":"passed"},"line":5,"name":"I am logged in as \"guest\" with password \"password\" to post as \"unauthorized\"","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"unauthorized\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1217596600,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Moby Dick","Herman Melville"]}],"keyword":"When "},{"result":{"duration":4998200,"status":"passed"},"line":9,"name":"the response status code should be 401","match":{"arguments":[{"val":"401","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:05:58.391Z","before":[{"result":{"duration":279000500,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":998000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1000300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":16,"name":"Create Book with Missing Title","description":"","id":"book-creation-scenarios;create-book-with-missing-title","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":3996300,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1232602400,"status":"passed"},"line":18,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","Missing Title"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [422] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 422(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:21)\r\n","duration":15999300,"status":"failed"},"line":21,"name":"the response status code should be 422","match":{"arguments":[{"val":"422","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:05:58.391Z","before":[{"result":{"duration":277000200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":998000,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":2003700,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":22,"name":"Create Book with Missing Author","description":"","id":"book-creation-scenarios;create-book-with-missing-author","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":994600,"status":"passed"},"line":23,"name":"I am logged in as \"admin\" with password \"password\" to post as admin","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":62}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1232602400,"status":"passed"},"line":24,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Missing Author",""]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [422] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat ✽.the response status code should be 422(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_books.feature:27)\r\n","duration":16998100,"status":"failed"},"line":27,"name":"the response status code should be 422","match":{"arguments":[{"val":"422","offset":35}],"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]}],"name":"Book Creation Scenarios","description":"","id":"book-creation-scenarios","keyword":"Feature","uri":"file:src/test/resources/features/1create_books.feature","tags":[{"name":"@CreateBook","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:05:58.390Z","before":[{"result":{"duration":277000200,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.setup()"}},{"result":{"duration":1000300,"status":"passed"},"match":{"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM2StepDefinition.setup()"}}],"line":12,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":3996300,"status":"passed"},"line":4,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1235605300,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Brave New World 345","Aldous Huxley 15"]}],"keyword":"When "},{"result":{"duration":2000000,"status":"passed"},"line":8,"name":"the response status code should be 200 for put Member1","match":{"arguments":[{"val":"200","offset":35}],"location":"com.APIAutomation.stepdefinitions.update.BookUpdateM1StepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]}],"name":"Book Update Scenarios by Member1","description":"","id":"book-update-scenarios-by-member1","keyword":"Feature","uri":"file:src/test/resources/features/4updateM1.feature","tags":[{"name":"@UpdateBookMember1","type":"Tag","location":{"line":1,"column":1}}]}]