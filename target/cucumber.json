[{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:46:09.757Z","before":[{"result":{"duration":308999300,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":2000400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":5999500,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1967001900,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"status":"passed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:46:09.719Z","before":[{"result":{"duration":310998700,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1031100,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1996400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1999700,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2000400,"status":"passed"},"line":5,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1969002600,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby2","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"duration":1000000,"status":"passed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:46:09.760Z","before":[{"result":{"duration":308999300,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1996400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1000500,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":4000400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":9997100,"status":"passed"},"line":5,"name":"I am logged in as \"user\" with password \"password\" to post as \"user\"","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":61}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1960001200,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Great Gatsby3","F. Scott Fitzgerald"]}],"keyword":"When "},{"result":{"status":"passed"},"line":9,"name":"the response status code should be 201","match":{"arguments":[{"val":"201","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:46:09.756Z","before":[{"result":{"duration":308999300,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1970000,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000000,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1000500,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":2002200,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":15,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1002900,"status":"passed"},"line":5,"name":"I am logged in as \"user\" with password \"password\" to post as \"user\"","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":61}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1964003000,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["1984    12","George Orwell"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: {\"id\":2,\"title\":\"1984    12\",\"author\":\"George Orwell\"} expected [208] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat âœ½.the response status code should be 208(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_book.feature:9)\r\n","duration":19000200,"status":"failed"},"line":9,"name":"the response status code should be 208","match":{"arguments":[{"val":"208","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:46:09.757Z","before":[{"result":{"duration":321000500,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":2001100,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":997000,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1000500,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Book Creation by Different User Types","description":"","id":"book-creation-scenarios;book-creation-by-different-user-types;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":5000700,"status":"passed"},"line":5,"name":"I am logged in as \"guest\" with password \"password\" to post as \"unauthorized\"","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"unauthorized\"","offset":62}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1625001400,"status":"passed"},"line":6,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Moby Dick","Herman Melville"]}],"keyword":"When "},{"result":{"duration":3999200,"status":"passed"},"line":9,"name":"the response status code should be 401","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:46:09.760Z","before":[{"result":{"duration":304999400,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":7996500,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":5000700,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":6996400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":999200,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":19,"name":"Create Book with Missing Title","description":"","id":"book-creation-scenarios;create-book-with-missing-title","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000100,"status":"passed"},"line":20,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1956005700,"status":"passed"},"line":21,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["author"]},{"cells":["Missing Title"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: {\"id\":6,\"title\":null,\"author\":\"Missing Title\"} expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat âœ½.the response status code should be 400(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_book.feature:24)\r\n","duration":8997100,"status":"failed"},"line":24,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]},{"start_timestamp":"2025-01-01T08:46:09.760Z","before":[{"result":{"duration":308999300,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":2997500,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":999900,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":27,"name":"Create Book with Missing Author","description":"","id":"book-creation-scenarios;create-book-with-missing-author","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2003000,"status":"passed"},"line":28,"name":"I am logged in as \"admin\" with password \"password\" to post as \"admin\"","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":62}],"location":"stepDefinitions.post.PostBooksStepDefinitions.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1966003000,"status":"passed"},"line":29,"name":"I send a POST request to \"/api/books\" with the following data:","match":{"arguments":[{"val":"\"/api/books\"","offset":25}],"location":"stepDefinitions.post.PostBooksStepDefinitions.sendPostRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title"]},{"cells":["Missing Author"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: {\"id\":1,\"title\":\"Missing Author\",\"author\":null} expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(PostBooksStepDefinitions.java:63)\r\n\tat âœ½.the response status code should be 400(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/1create_book.feature:32)\r\n","duration":15999800,"status":"failed"},"line":32,"name":"the response status code should be 400","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.post.PostBooksStepDefinitions.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@CreateBook"}]}],"name":"Book Creation Scenarios","description":"","id":"book-creation-scenarios","keyword":"Feature","uri":"file:src/test/resources/features/1create_book.feature","tags":[{"name":"@CreateBook","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:46:09.757Z","before":[{"result":{"duration":308999300,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1970000,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000000,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1999700,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":2000400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Get the list of books with different admin or user credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-or-user-credentials-get;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1998200,"status":"passed"},"line":6,"name":"I am an admin user with username \"admin\" and password \"password\" Get","match":{"arguments":[{"val":"\"admin\"","offset":33},{"val":"\"password\"","offset":54}],"location":"stepDefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1917002500,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"stepDefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":8000400,"status":"passed"},"line":8,"name":"the response status code should be 200 Get","match":{"arguments":[{"val":"200","offset":35}],"location":"stepDefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":253999800,"status":"passed"},"line":9,"name":"the response should contain a list of books Get","match":{"location":"stepDefinitions.get.GetAllBooks.validateBooksListGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]},{"start_timestamp":"2025-01-01T08:46:09.757Z","before":[{"result":{"duration":308999300,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1031100,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":5000600,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":3003300,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":2999700,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Get the list of books with different admin or user credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-or-user-credentials-get;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999200,"status":"passed"},"line":6,"name":"I am an admin user with username \"admin2\" and password \"password2\" Get","match":{"arguments":[{"val":"\"admin2\"","offset":33},{"val":"\"password2\"","offset":55}],"location":"stepDefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1608002300,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"stepDefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":4999900,"status":"passed"},"line":8,"name":"the response status code should be 401 Get","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":998400,"status":"passed"},"line":9,"name":"the response should be empty or invalid Get","match":{"location":"stepDefinitions.get.GetAllBooks.validateEmptyResponseGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]},{"start_timestamp":"2025-01-01T08:46:09.719Z","before":[{"result":{"duration":304999400,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":5997100,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1999900,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1000100,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":15,"name":"Get the list of books with different admin or user credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-or-user-credentials-get;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":7003500,"status":"passed"},"line":6,"name":"I am an admin user with username \"admin3\" and password \"password3\" Get","match":{"arguments":[{"val":"\"admin3\"","offset":33},{"val":"\"password3\"","offset":55}],"location":"stepDefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1612002800,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"stepDefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":4999900,"status":"passed"},"line":8,"name":"the response status code should be 401 Get","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":2000200,"status":"passed"},"line":9,"name":"the response should be empty or invalid Get","match":{"location":"stepDefinitions.get.GetAllBooks.validateEmptyResponseGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]},{"start_timestamp":"2025-01-01T08:46:11.878Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":997200,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Get the list of books with different admin or user credentials Get","description":"","id":"retrieve-books;get-the-list-of-books-with-different-admin-or-user-credentials-get;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":6,"name":"I am an admin user with username \"user\" and password \"password\" Get","match":{"arguments":[{"val":"\"user\"","offset":33},{"val":"\"password\"","offset":53}],"location":"stepDefinitions.get.GetAllBooks.setCredentialsGet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":151001000,"status":"passed"},"line":7,"name":"I send a GET request to \"/api/books\" Get","match":{"arguments":[{"val":"\"/api/books\"","offset":24}],"location":"stepDefinitions.get.GetAllBooks.i_send_a_get_request_to_Get(java.lang.String)"},"keyword":"When "},{"result":{"duration":8000400,"status":"passed"},"line":8,"name":"the response status code should be 200 Get","match":{"arguments":[{"val":"200","offset":35}],"location":"stepDefinitions.get.GetAllBooks.validateStatusCodeGet(java.lang.Integer)"},"keyword":"Then "},{"result":{"duration":251999400,"status":"passed"},"line":9,"name":"the response should contain a list of books Get","match":{"location":"stepDefinitions.get.GetAllBooks.validateBooksListGet()"},"keyword":"And "}],"tags":[{"name":"@GetAllBooks"}]}],"name":"Retrieve Books","description":"  As an admin user, I want to retrieve a list of books so that I can manage them.","id":"retrieve-books","keyword":"Feature","uri":"file:src/test/resources/features/2get_book.feature","tags":[{"name":"@GetAllBooks","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:46:11.871Z","before":[{"result":{"duration":2003000,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":2996600,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1001100,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":999500,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Get book details with different credentials and scenarios getbyID","description":"","id":"retrieve-book-by-id;get-book-details-with-different-credentials-and-scenarios-getbyid;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2000400,"status":"passed"},"line":6,"name":"I am an user with username \"admin\" and password \"password\" getbyID","match":{"arguments":[{"val":"\"admin\"","offset":27},{"val":"\"password\"","offset":48}],"location":"stepDefinitions.get.GetBookById.iAmAnUserWithUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":273000600,"status":"passed"},"line":7,"name":"I send a GET request for book ID 1 getbyID","match":{"arguments":[{"val":"1","offset":33}],"location":"stepDefinitions.get.GetBookById.iSendAGetRequestForBookId(java.lang.Integer)"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 200 getbyID","match":{"arguments":[{"val":"200","offset":35}],"location":"stepDefinitions.get.GetBookById.theResponseStatusCodeShouldBe(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@GetBookByID"}]},{"start_timestamp":"2025-01-01T08:46:11.875Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":998800,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Get book details with different credentials and scenarios getbyID","description":"","id":"retrieve-book-by-id;get-book-details-with-different-credentials-and-scenarios-getbyid;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999600,"status":"passed"},"line":6,"name":"I am an user with username \"user\" and password \"password\" getbyID","match":{"arguments":[{"val":"\"user\"","offset":27},{"val":"\"password\"","offset":47}],"location":"stepDefinitions.get.GetBookById.iAmAnUserWithUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":226002400,"status":"passed"},"line":7,"name":"I send a GET request for book ID 1 getbyID","match":{"arguments":[{"val":"1","offset":33}],"location":"stepDefinitions.get.GetBookById.iSendAGetRequestForBookId(java.lang.Integer)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected response status code expected [200] but found [403]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.get.GetBookById.theResponseStatusCodeShouldBe(GetBookById.java:40)\r\n\tat âœ½.the response status code should be 200 getbyID(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/3get_book_by_id.feature:8)\r\n","duration":5002600,"status":"failed"},"line":8,"name":"the response status code should be 200 getbyID","match":{"arguments":[{"val":"200","offset":35}],"location":"stepDefinitions.get.GetBookById.theResponseStatusCodeShouldBe(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@GetBookByID"}]},{"start_timestamp":"2025-01-01T08:46:12.133Z","before":[{"result":{"duration":998800,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1001900,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1002600,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Get book details with different credentials and scenarios getbyID","description":"","id":"retrieve-book-by-id;get-book-details-with-different-credentials-and-scenarios-getbyid;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999200,"status":"passed"},"line":6,"name":"I am an user with username \"admin\" and password \"password\" getbyID","match":{"arguments":[{"val":"\"admin\"","offset":27},{"val":"\"password\"","offset":48}],"location":"stepDefinitions.get.GetBookById.iAmAnUserWithUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":286547100,"status":"passed"},"line":7,"name":"I send a GET request for book ID 100 getbyID","match":{"arguments":[{"val":"100","offset":33}],"location":"stepDefinitions.get.GetBookById.iSendAGetRequestForBookId(java.lang.Integer)"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 404 getbyID","match":{"arguments":[{"val":"404","offset":35}],"location":"stepDefinitions.get.GetBookById.theResponseStatusCodeShouldBe(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@GetBookByID"}]},{"start_timestamp":"2025-01-01T08:46:12.137Z","before":[{"result":{"duration":996200,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":999800,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":4998800,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":3001000,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":15,"name":"Get book details with different credentials and scenarios getbyID","description":"","id":"retrieve-book-by-id;get-book-details-with-different-credentials-and-scenarios-getbyid;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":6,"name":"I am an user with username \"admin2\" and password \"password2\" getbyID","match":{"arguments":[{"val":"\"admin2\"","offset":27},{"val":"\"password2\"","offset":49}],"location":"stepDefinitions.get.GetBookById.iAmAnUserWithUsernameAndPassword(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":269542600,"status":"passed"},"line":7,"name":"I send a GET request for book ID 99 getbyID","match":{"arguments":[{"val":"99","offset":33}],"location":"stepDefinitions.get.GetBookById.iSendAGetRequestForBookId(java.lang.Integer)"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"the response status code should be 401 getbyID","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.get.GetBookById.theResponseStatusCodeShouldBe(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@GetBookByID"}]}],"name":"Retrieve Book by ID","description":"  As a user, I want to retrieve a book by its ID so that I can view its details","id":"retrieve-book-by-id","keyword":"Feature","uri":"file:src/test/resources/features/3get_book_by_id.feature","tags":[{"name":"@GetBookByID","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:46:12.158Z","before":[{"result":{"duration":8002700,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":374542000,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Brave New World 12345","Aldous Huxley 15"]}],"keyword":"When "},{"result":{"duration":1001600,"status":"passed"},"line":8,"name":"the response status code should be 200 for put Member1","match":{"arguments":[{"val":"200","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2025-01-01T08:46:12.145Z","before":[{"result":{"duration":1000200,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999200,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":1000300,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":2001500,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999500,"status":"passed"},"line":4,"name":"I am logged in as \"user\" with password \"password\" to update as \"user\" Member1","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":63}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":248546200,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    12s4","Paulo Coelho    15"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: User is not permitted. expected [401] but found [403]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(BookUpdateM1StepDefinition.java:83)\r\n\tat âœ½.the response status code should be 401 for put Member1(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/4updateM1.feature:8)\r\n","duration":6017700,"status":"failed"},"line":8,"name":"the response status code should be 401 for put Member1","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2025-01-01T08:46:12.194Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":4001300,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Book Update by Different User Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-user-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":998600,"status":"passed"},"line":4,"name":"I am logged in as \"guest\" with password \"password\" to update as \"guest\" Member1","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"guest\"","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":103000800,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    12s3","Paulo Coelho    15"]}],"keyword":"When "},{"result":{"duration":4000300,"status":"passed"},"line":8,"name":"the response status code should be 401 for put Member1","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2025-01-01T08:46:12.158Z","before":[{"result":{"duration":5999800,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":25,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-validation-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000100,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":263563900,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","Aldous Huxley 5asda"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [400] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(BookUpdateM1StepDefinition.java:83)\r\n\tat âœ½.the response status code should be 400 for put Member1(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/4updateM1.feature:21)\r\n","duration":2999700,"status":"failed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]},{"start_timestamp":"2025-01-01T08:46:12.208Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":26,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member1;book-update-by-different-validation-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as \"admin\" Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"admin\"","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":236547300,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["test book",""]}],"keyword":"When "},{"result":{"duration":3000100,"status":"passed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember1"}]}],"name":"Book Update Scenarios by Member1","description":"","id":"book-update-scenarios-by-member1","keyword":"Feature","uri":"file:src/test/resources/features/4updateM1.feature","tags":[{"name":"@UpdateBookMember1","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:46:12.227Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":12,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member2;book-update-by-different-validation-types;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"user\" with password \"password\" to update as \"user\" Member1","match":{"arguments":[{"val":"\"user\"","offset":18},{"val":"\"password\"","offset":39},{"val":"\"user\"","offset":63}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":209546300,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    s2",""]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: User is not permitted. expected [401] but found [403]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(BookUpdateM1StepDefinition.java:83)\r\n\tat âœ½.the response status code should be 401 for put Member1(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/5updateM2.feature:8)\r\n","duration":5998700,"status":"failed"},"line":8,"name":"the response status code should be 401 for put Member1","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2025-01-01T08:46:12.340Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":13,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member2;book-update-by-different-validation-types;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":4,"name":"I am logged in as \"guest\" with password \"password\" to update as \"guest\" Member1","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"guest\"","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":27411100,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["The Alchemist    s2",""]}],"keyword":"When "},{"result":{"duration":1011200,"status":"passed"},"line":8,"name":"the response status code should be 401 for put Member1","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2025-01-01T08:46:12.354Z","before":[{"result":{"duration":999600,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":999200,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":14,"name":"Book Update by Different validation Types","description":"","id":"book-update-scenarios-by-member2;book-update-by-different-validation-types;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":511200,"status":"passed"},"line":4,"name":"I am logged in as \"guest\" with password \"password\" to update as \"guest\" Member1","match":{"arguments":[{"val":"\"guest\"","offset":18},{"val":"\"password\"","offset":40},{"val":"\"guest\"","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":45997000,"status":"passed"},"line":5,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","author abc"]}],"keyword":"When "},{"result":{"duration":5001200,"status":"passed"},"line":8,"name":"the response status code should be 401 for put Member1","match":{"arguments":[{"val":"401","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2025-01-01T08:46:12.491Z","before":[{"result":{"duration":999700,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":998800,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":8014100,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":25,"name":"Update Book with Validation Errors","description":"","id":"book-update-scenarios-by-member2;update-book-with-validation-errors;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as admin Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":175005000,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["","Missing Title 45"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [400] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(BookUpdateM1StepDefinition.java:83)\r\n\tat âœ½.the response status code should be 400 for put Member1(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/5updateM2.feature:21)\r\n","duration":995900,"status":"failed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2025-01-01T08:46:12.392Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1002800,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":26,"name":"Update Book with Validation Errors","description":"","id":"book-update-scenarios-by-member2;update-book-with-validation-errors;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":6000400,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as admin Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":187000500,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["Missing Author 45",""]}],"keyword":"When "},{"result":{"status":"passed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]},{"start_timestamp":"2025-01-01T08:46:12.480Z","before":[{"result":{"duration":999100,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":27,"name":"Update Book with Validation Errors","description":"","id":"book-update-scenarios-by-member2;update-book-with-validation-errors;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":999100,"status":"passed"},"line":17,"name":"I am logged in as \"admin\" with password \"password\" to update as admin Member1","match":{"arguments":[{"val":"\"admin\"","offset":18},{"val":"\"password\"","offset":40},{"val":"admin","offset":64}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.loginUser(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":203001400,"status":"passed"},"line":18,"name":"I send a PUT request to \"/api/books/3\" with the following data Member1:","match":{"arguments":[{"val":"\"/api/books/3\"","offset":24}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.sendPutRequest(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["title","author"]},{"cells":["",""]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Unexpected status code. Response body: Book Already Exists expected [400] but found [208]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(BookUpdateM1StepDefinition.java:83)\r\n\tat âœ½.the response status code should be 400 for put Member1(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/5updateM2.feature:21)\r\n","duration":995000,"status":"failed"},"line":21,"name":"the response status code should be 400 for put Member1","match":{"arguments":[{"val":"400","offset":35}],"location":"stepDefinitions.update.BookUpdateM1StepDefinition.verifyStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@UpdateBookMember2"}]}],"name":"Book Update Scenarios by Member2","description":"","id":"book-update-scenarios-by-member2","keyword":"Feature","uri":"file:src/test/resources/features/5updateM2.feature","tags":[{"name":"@UpdateBookMember2","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2025-01-01T08:46:12.495Z","before":[{"result":{"duration":1000900,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":4,"name":"Delete a book by ID as admin","description":"","id":"delete-a-book;delete-a-book-by-id-as-admin","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":5,"name":"I am logged in to delete as admin user name \"admin\" password \"password\"","match":{"arguments":[{"val":"\"admin\"","offset":44},{"val":"\"password\"","offset":61}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.login_as_admin(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":175994300,"status":"passed"},"line":6,"name":"I send a DELETE request to \"/api/books/3\"","match":{"arguments":[{"val":"\"/api/books/3\"","offset":27}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<200> but was:<403>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:70)\r\n\tat âœ½.the response delete status code should be 200(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/6delete_books.feature:7)\r\n","duration":2000400,"status":"failed"},"line":7,"name":"the response delete status code should be 200","match":{"arguments":[{"val":"200","offset":42}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":8,"name":"the delete response body should contain \"Book deleted successfully\"","match":{"arguments":[{"val":"\"Book deleted successfully\"","offset":40}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2025-01-01T08:46:12.477Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1000600,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":10,"name":"Delete a book by ID as user","description":"","id":"delete-a-book;delete-a-book-by-id-as-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1999500,"status":"passed"},"line":11,"name":"I am logged in to delete as user name \"user\" password \"password\"","match":{"arguments":[{"val":"\"user\"","offset":38},{"val":"\"password\"","offset":54}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.login_as_user(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":170002000,"status":"passed"},"line":12,"name":"I send a DELETE request to \"/api/books/3\"","match":{"arguments":[{"val":"\"/api/books/3\"","offset":27}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<401> but was:<200>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:70)\r\n\tat âœ½.the response delete status code should be 401(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/6delete_books.feature:13)\r\n","duration":1003700,"status":"failed"},"line":13,"name":"the response delete status code should be 401","match":{"arguments":[{"val":"401","offset":42}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":14,"name":"the delete response body should contain \"Unauthorized access\"","match":{"arguments":[{"val":"\"Unauthorized access\"","offset":40}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2025-01-01T08:46:12.474Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":3000900,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":999800,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":3000300,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":16,"name":"Delete a not existing book by ID as user","description":"","id":"delete-a-book;delete-a-not-existing-book-by-id-as-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":17,"name":"I am logged in to delete not existing as user name \"user\" password \"password\"","match":{"arguments":[{"val":"\"user\"","offset":51},{"val":"\"password\"","offset":67}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.login_as_user_for_non_existing_book(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":154998500,"status":"passed"},"line":18,"name":"I send a DELETE request to \"/api/books/99\"","match":{"arguments":[{"val":"\"/api/books/99\"","offset":27}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":2000200,"status":"passed"},"line":19,"name":"the response delete status code should be 404","match":{"arguments":[{"val":"404","offset":42}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"passed"},"line":20,"name":"the delete response body should contain \"Book not found\"","match":{"arguments":[{"val":"\"Book not found\"","offset":40}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2025-01-01T08:46:12.471Z","before":[{"result":{"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":999100,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":1000900,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":22,"name":"Delete a not existing book by ID as admin","description":"","id":"delete-a-book;delete-a-not-existing-book-by-id-as-admin","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":999100,"status":"passed"},"line":23,"name":"I am logged in to delete not existing as user name \"admin\" password \"password\"","match":{"arguments":[{"val":"\"admin\"","offset":51},{"val":"\"password\"","offset":68}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.login_as_user_for_non_existing_book(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":167001700,"status":"passed"},"line":24,"name":"I send a DELETE request to \"/api/books/99\"","match":{"arguments":[{"val":"\"/api/books/99\"","offset":27}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Delete request status code does not match expected:<404> but was:<403>\r\n\tat org.testng.AssertJUnit.fail(AssertJUnit.java:65)\r\n\tat org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:467)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:88)\r\n\tat org.testng.AssertJUnit.assertEquals(AssertJUnit.java:318)\r\n\tat stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(BookDeletionStepDefinition.java:70)\r\n\tat âœ½.the response delete status code should be 404(file:///E:/Github%20Desktop/ITQA-API-Testing/src/test/resources/features/6delete_books.feature:25)\r\n","duration":2004400,"status":"failed"},"line":25,"name":"the response delete status code should be 404","match":{"arguments":[{"val":"404","offset":42}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"duration":2000400,"status":"skipped"},"line":26,"name":"the delete response body should contain \"Book not found\"","match":{"arguments":[{"val":"\"Book not found\"","offset":40}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]},{"start_timestamp":"2025-01-01T08:46:12.471Z","before":[{"result":{"duration":1000400,"status":"passed"},"match":{"location":"stepDefinitions.get.GetAllBooks.setup()"}},{"result":{"duration":1000600,"status":"passed"},"match":{"location":"stepDefinitions.post.PostBooksStepDefinitions.setup()"}},{"result":{"duration":3001400,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM1StepDefinition.setup()"}},{"result":{"duration":999700,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateM2StepDefinition.setup()"}},{"result":{"duration":998800,"status":"passed"},"match":{"location":"stepDefinitions.update.BookUpdateStepDefinitions.setup()"}}],"line":28,"name":"Delete a existing book by ID as non-auth user","description":"","id":"delete-a-book;delete-a-existing-book-by-id-as-non-auth-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"I am logged in to delete not existing as user name \"no auth\" password \"no auth\"","match":{"arguments":[{"val":"\"no auth\"","offset":51},{"val":"\"no auth\"","offset":70}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.login_as_user_for_non_existing_book(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":167000000,"status":"passed"},"line":30,"name":"I send a DELETE request to \"/api/books/3\"","match":{"arguments":[{"val":"\"/api/books/3\"","offset":27}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.send_delete_request(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":31,"name":"the response delete status code should be 401","match":{"arguments":[{"val":"401","offset":42}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_status_code(int)"},"keyword":"Then "},{"result":{"status":"passed"},"line":32,"name":"the delete response body should contain \"\"","match":{"arguments":[{"val":"\"\"","offset":40}],"location":"stepDefinitions.delete.BookDeletionStepDefinition.verify_response_body(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@DeleteBooks"}]}],"name":"Delete a book","description":"","id":"delete-a-book","keyword":"Feature","uri":"file:src/test/resources/features/6delete_books.feature","tags":[{"name":"@DeleteBooks","type":"Tag","location":{"line":1,"column":1}}]}]